scp_program -> additionals_names
(*
	-> rrel_params : ...
	(*
		-> rrel_1 : rrel_in : _name ;;
		-> rrel_2 : rrel_in : _test_lexeme ;;
	*);;
	-> rrel_operators : ...
	(*

-> rrel_init : .proc_additional_names_operator_0
		(*
	<- printNl ;;
			
			-> rrel_1 : rrel_fixed : rrel_scp_const : [START];;
			

			=> nrel_goto : .proc_additional_names_operator_1A ;;
			
		*);;
->.proc_additional_names_operator_1A
		(*
	<- searchElStr5 ;;
			
			-> rrel_1 : rrel_assign : rrel_scp_var : rrel_node : _node_l;;
			-> rrel_2 : rrel_assign : rrel_const: rrel_common:  rrel_scp_var : _arc1 ;;
			-> rrel_3 : rrel_fixed : rrel_scp_var : rrel_node : _name ;;
     			-> rrel_4 : rrel_assign : rrel_scp_var : rrel_pos_const_perm : _arc2 ;;
			-> rrel_5 : rrel_fixed : rrel_scp_const : nrel_intersection;;

			//-> rrel_set_1 : rrel_assign : rrel_scp_var : rrel_node : _set ;;

			=> nrel_then : .proc_additional_names_operator_1B ;;
			=> nrel_else : .proc_additional_names_operator_error;;
		*);;
-> .proc_additional_names_operator_1B
		(*
			<- searchSetStr3 ;;
			
			-> rrel_1 : rrel_fixed : rrel_scp_var : rrel_node : _node_l ;;
			-> rrel_2 : rrel_assign : rrel_scp_var : rrel_pos_const_perm : _arc1 ;;
			-> rrel_3 : rrel_assign : rrel_scp_var : rrel_node : _node_category ;;
			//-> rrel_3 : rrel_fixed : rrel_scp_const : rrel_node : lexeme_impersonal ;;

			-> rrel_set_3 : rrel_assign : rrel_scp_var : _set_category ;;

		    => nrel_then : .proc_additional_names_operator_1C ;;
		=> nrel_else : .proc_additional_names_operator_error;;
		*);;

-> .proc_additional_names_operator_1C
		(*
			<- searchElStr3 ;;
			
			-> rrel_1 : rrel_fixed : rrel_scp_var : rrel_node : _set_category ;;
			-> rrel_2 : rrel_assign : rrel_scp_var : rrel_pos_const_perm : _arc1 ;;
			-> rrel_3 : rrel_assign : rrel_scp_var : rrel_node : _node_category;;

		    => nrel_then : .proc_additional_names_operator_1D ;;
			=> nrel_else : .proc_additional_names_operator_2;;
		*);;

-> .proc_additional_names_operator_1D
		(*
			<- searchElStr3 ;;
			
			
			-> rrel_1: rrel_fixed : rrel_scp_var : rrel_node : _node_category ;;
			-> rrel_2: rrel_assign : rrel_scp_var : rrel_pos_const_perm : _arc2 ;;
			-> rrel_3: rrel_fixed : rrel_scp_var : rrel_node : _test_lexeme ;;

		    => nrel_then : .proc_additional_names_operator_1E ;;
			=> nrel_else : .proc_additional_names_operator_notsuccessfully;;
		*);;

-> .proc_additional_names_operator_1E
		(*
		<- eraseEl ;;
	
			-> rrel_1 : rrel_fixed : rrel_scp_var : rrel_pos_const_perm : rrel_erase : _arc1 ;;

			=> nrel_goto : .proc_additional_names_operator_1C ;;
		*);;

-> .proc_additional_names_operator_2
		(*
		 <- genElStr3;;  
			
		 	-> rrel_1: rrel_fixed: rrel_scp_var: _name;;    
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;    
			-> rrel_3: rrel_fixed: rrel_scp_var: _test_lexeme;; 
 
	=> nrel_goto: .proc_additional_names_operator_return;;
		*);;

-> .proc_additional_names_operator_notsuccessfully(*
<- printNl ;;

			-> rrel_1 : rrel_fixed : rrel_scp_const : [Not successfully] ;;
	
			=> nrel_goto : .proc_additional_names_operator_return;;
		*);; 

-> .proc_additional_names_operator_error(*
<- printNl ;;

			-> rrel_1 : rrel_fixed : rrel_scp_const : [error] ;;
	
			=> nrel_goto : .proc_additional_names_operator_return;;
		*);; 

-> .proc_additional_names_operator_successfully(*
<- printNl ;;

			-> rrel_1 : rrel_fixed : rrel_scp_const : [successfully] ;;
	
			=> nrel_goto : .proc_additional_names_operator_return;;
		*);; 

-> .proc_additional_names_operator_return(*
<- return ;;
		*);; 
	*);;
*);;

